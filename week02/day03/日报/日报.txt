2020/06/10
	学习大纲：
		购物车
			登录、未登录
			合并
			工程搭建
		
		一、购物车分析
			分析：
				1. 添加购物车商品
				2. 展示购物车列表页面
				3. 修改购物车商品数量
				4. 删除购物车商品
				
			两种购物车设计特点：
				a、用户未登录状态下
					优点：
						不占用服务端存储空间  代码实现简单。  用户体验好  （京东）
					缺点：
						cookie中保存的容量有限。最大4k    更换设备购物车信息不能同步。

				    总结：在不登陆的情况下把购物车信息写入cookie
					
				b、用户已登录状态下
					优点：
						更换设备购物车信息可以同步  （淘宝）
					缺点：
						不占用服务端存储空间
				
					总结：把购物车信息保存到服务端的 Redis 中
					
		二、创建工程
			创建usian_cart_service
				pom.xml  application.yml  
						
			
			创建usian_cart_feign
				pom.xml  
			
			创建usian_cart_web
				pom.xml  application.yml  
				
		
		三、未登录状态操作购物车
			业务逻辑：
			1、从cookie中查询商品列表：Map<itemId,TbItem> 商品购买数量使用TbItem的num保存

				购物车已存在则直接返回  购物车不存在则创建空的购物车并返回

       		2、添加商品到购物车：

				如果购物车存在该商品，商品数量相加。

				如果购物车不存在该商品，根据商品id查询商品信息并添加到购车列表

			3、把购车商品列表写入cookie。

				读写cookie可以使用CookieUtils工具类实现
			
			添加
				a、判断是否有购物车，如果有返回，没有就创建
				b、添加商品到购物车， 如果有数量相加，如果没有直接写入
				c、把购车商品列表写入cookie
				
			查看
				a、获取cookie中的map集合 遍历存入List集合并展示
			
			修改
				a、获取购物车
				b、修改购物车的商品
				c、将购物车放回cookie 中
			
			删除
				a、从购物车中移处  itemId  
				b、将购物车放回cookie 中
		
		四、登录状态操作购物车
					
			业务逻辑：	
				从redis中查询商品列表	
				使用hash对购物车进行归类
				
			添加
				a、判断是否有购物车，如果有返回，没有就创建
				b、添加商品到购物车， 如果有数量相加，如果没有直接写入
				
			
				
				
				
				
				
				
				
				
				
				
				
				
				
				
				